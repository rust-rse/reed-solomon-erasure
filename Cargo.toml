[package]
name = "reed-solomon-erasure"
version = "6.1.0"
description = "Rust implementation of Reed-Solomon erasure coding"
keywords = ["reed-solomon", "erasure"]
categories = ["encoding"]
license = "MIT"
authors = ["Darren Ldl <darrenldldev@gmail.com>"]
edition = "2018"
homepage = "https://github.com/darrenldl/reed-solomon-erasure"
repository = "https://github.com/darrenldl/reed-solomon-erasure"
include = [
    "/benches",
    "/simd_c",
    "/src",
    "/build.rs",
    "/LICENSE",
    "/README.md"
]

[features]
default = ["std"] # simd off by default
std = ["parking_lot"]
simd-accel = ["cc", "libc"]

[badges]
travis-ci = { repository = "darrenldl/reed-solomon-erasure" }
appveyor = { repository = "darrenldl/reed-solomon-erasure" }
codecov = { repository = "darrenldl/reed-solomon-erasure" }
coveralls = { repository = "darrenldl/reed-solomon-erasure" }

[dependencies]
libc = { version = "0.2.138", optional = true }
# `log2()` impl for `no_std`
libm = "0.2.6"
lru = "0.8.1"
# Efficient `Mutex` implementation for `std` environment
parking_lot = { version = "0.12.1", optional = true }
smallvec = "1.10.0"
# `Mutex` implementation for `no_std` environment with the same high-level API as `parking_lot`
spin = { version = "0.9.4", default-features = false, features = ["spin_mutex"] }

[dev-dependencies]
rand = { version = "0.8.5", features = ["small_rng"] }
quickcheck = "1.0.3"
# Scientific benchmarking
criterion = { version = "0.4.0", features = ["html_reports"] }

[build-dependencies]
cc = { version = "1.0.78", optional = true }

[[bench]]
name = "bandwidth"
harness = false
